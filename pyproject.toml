[project]
name = "dml-tools"
version = "2025.7.1043"
description = "Set of command-line tools which need python"
authors = [{ name = "Dave Lane", email = "cheery.koala5370@fastmail.com" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.12,<3.14"
dependencies = [
  "eyed3>=0.9.7",
  "appdirs>=1.4.4"
]

[project.scripts]
car-podcasts = "tools.car_podcasts:main"

[project.urls]
Repository = "https://github.com/dmlane/dml-tools"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ───────────────────────────────
# Poetry-specific configuration
# ───────────────────────────────

[tool.poetry]
include = [
  { path = "LICENSE", format = "sdist" },
  { path = "README.md", format = "sdist" },
  { path = "docs", format = "sdist" },
  { path = "tests", format = "sdist" }
]
packages = [
  { include = "tools", from = "src" }
]

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
myst-parser = ">=0.16"
sphinx = ">=4.0"
sphinx-autobuild = ">=2021.0"
sphinx-rtd-theme = ">=1.0"

[tool.poetry.group.dev.dependencies]
black = ">=23.3.0"
bumpver = ">=2022.1120"
isort = ">=5.12.0"
mypy = ">=1.2.0"
pre-commit = "^3.5.0"
pylint = ">=2.17.2"
pypi-simple = "^1.4.0"
pytest = ">=7.3.1"
pytest-resource-path = "^1.3.0"
setuptools = "^68.2.2"
mock = "^5.1.0"

[[tool.poetry.source]]
name = "repositories.fury"
url = "https://pypi.fury.io/dave-lane/"
priority = "supplemental"

# ───────────────────────────────
# Tooling configuration
# ───────────────────────────────

[tool.bumpver]
current_version = "2025.7.1043"
version_pattern = "YYYY.MM.BUILD[-PYTAGNUM]"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
  '^version = "{version}"',
  '^current_version = "{version}"'
]

[tool.black]
line_length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 100

[tool.pytest.ini_options]
pythonpath = "src/tools"

[tool.ruff]
line-length = 100
target-version = "py312"
fix = true
# Ensure IDEs and Ruff agree on src-layout and paths
src = ["src", "tests", "scripts"]
respect-gitignore = true

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["D"]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors (incl. E501)
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort (imports)
    "UP", # pyupgrade
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "SIM", # flake8-simplify
    "BLE", # flake8-blind-except (broad Exception)
    "PL", # Pylint-inspired (PLC/PLE/PLR/PLW) -> import-outside, too-many-locals, etc.
    "RUF"  # Ruff-specific
]
extend-select = ["D100", "D101", "D102", "D103"]

ignore = [
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "PLR2004", # magic value in comparison
    "E501", # ignore long lines in triple-quoted strings
    # Optionally keep Ruff from combining imports in ways that can fight Black
    "ISC001"
]

[tool.ruff.lint.pylint]
max-locals = 15
max-returns = 6
max-branches = 12
max-statements = 50

[tool.ruff.lint.isort]
known-first-party = ["tools"]
combine-as-imports = true

[tool.ruff.format]
# optional, but nice to be explicit
quote-style = "double"
indent-style = "space"
